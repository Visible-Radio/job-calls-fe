[{"/Users/patrickkaipainen/Desktop/job-calls-fe/src/index.js":"1","/Users/patrickkaipainen/Desktop/job-calls-fe/src/App.js":"2","/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/LineGraph/LineGraph.js":"3","/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/ColorLegend/ColorLegend.js":"4","/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/DoughnutGraph/DoughnutGraph.js":"5","/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/Marquee/Marquee.js":"6","/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/TotalLineGraph/TotalLineGraph.js":"7"},{"size":220,"mtime":1610403079665,"results":"8","hashOfConfig":"9"},{"size":3477,"mtime":1610403109496,"results":"10","hashOfConfig":"9"},{"size":2701,"mtime":1610403078416,"results":"11","hashOfConfig":"9"},{"size":736,"mtime":1610403079016,"results":"12","hashOfConfig":"9"},{"size":1841,"mtime":1610403077176,"results":"13","hashOfConfig":"9"},{"size":269,"mtime":1610391312303,"results":"14","hashOfConfig":"9"},{"size":2515,"mtime":1610403077793,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1a5q9d9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/patrickkaipainen/Desktop/job-calls-fe/src/index.js",[],["33","34"],"/Users/patrickkaipainen/Desktop/job-calls-fe/src/App.js",["35"],"import React, { Component } from 'react';\nimport './App.css';\nimport LineGraph from './Components/LineGraph/LineGraph';\nimport TotalLineGraph from './Components/TotalLineGraph/TotalLineGraph';\nimport Marquee from './Components/Marquee/Marquee';\nimport DoughnutGraph from './Components/DoughnutGraph/DoughnutGraph';\nimport ColorLegend from './Components/ColorLegend/ColorLegend';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // rawFromAPI: [],\n      datasets: {},\n      start: \"2020-12-01\",\n      end: \"2020-12-31\",\n      dates: [],\n      total: [],\n      colors: []\n    }\n  }\n\n  generateRandomColors = () => {\n    const random = () => {\n        const num = Math.floor(Math.random() * (350 - 50) + 50);\n        return num > 255 ? 255 : num;           \n    } \n      const R = random();\n      const G = random();\n      const B = random();\n      const A = 0.0      \n      const lineColor = `rgb(${R}, ${G}, ${B})`;\n      const fillColor = `rgb(${G-50}, ${R-50}, ${B-50}, ${A})`;\n      return {\n        lineColor,\n        fillColor\n      }    \n  }\n\n  generateColorArray = () => {    \n    const arr = []\n    for (let i=0; i < 16; i++) {\n      arr.push(this.generateRandomColors());\n    }\n    return arr;\n  }\n\n  /*transform our data into something like this:\n    {\n      Dates: [2020-12-15, 2020-12-16, 2020-12-17],\n      JW: [5, 2, 8],\n      AW: [2, 10, 7],\n      //etc, for all classes that may be returned from DB\n    }\n  */\n  prepareDatasets = (response) => {    \n    const keys = Object.keys(response[0]);       \n    const datasets = {};\n    keys.forEach(key => datasets[key] = []);\n    response.forEach(obj => {\n      for (let key in obj) {\n        datasets[key].push(obj[key]);\n      }\n    })\n    return datasets;       \n  }\n\n  componentDidMount() {\n    this.setState({colors: this.generateColorArray()})        \n    fetch('http://127.0.0.1:3000/members_needed_by_date', {\n      method: 'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        \"start\": this.state.start,\n        \"end\": this.state.end,\n        \"member_class\": [\"JW\", \"AW\", \"JHW\"]\n      })\n    })\n   .then(response => response.json())   \n   .then(response => {    \n    //this.setState(Object.assign(this.state.rawFromAPI, response))\n    return this.prepareDatasets(response);\n   })   \n   .then(preparedDatasets => {    \n    this.setState({total: preparedDatasets.Total, dates: preparedDatasets.Date})    \n    return preparedDatasets;\n   })\n   .then(preparedDatasets => {\n    this.setState(Object.assign(this.state.datasets, preparedDatasets))    \n   })\n   .catch(err => console.log(\"Fetch failed \", err))\n    \n  }\n\n  render() {        \n    return (\n      <div className=\"App\">\n        <div className=\"multiGraphContainer\">\n          <ColorLegend datasets={this.state.datasets} colors={this.state.colors} />   \n          <TotalLineGraph \n            total={this.state.total}\n            dates={this.state.dates}\n            start={this.state.start}\n            end={this.state.end}\n          />\n        </div>\n        <div className=\"multiGraphContainer\">\n          <LineGraph \n            datasets={this.state.datasets}\n            start={this.state.start}\n            end={this.state.end}\n            colors={this.state.colors} \n          />\n          <DoughnutGraph\n            datasets={this.state.datasets}\n            colors={this.state.colors} \n          />\n        </div>\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/LineGraph/LineGraph.js",[],"/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/ColorLegend/ColorLegend.js",[],"/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/DoughnutGraph/DoughnutGraph.js",[],["36","37"],"/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/Marquee/Marquee.js",[],"/Users/patrickkaipainen/Desktop/job-calls-fe/src/Components/TotalLineGraph/TotalLineGraph.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":15},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'Marquee' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]